// generated by cdktf get
// Azure/avm-res-containerservice-managedcluster/azurerm
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface AksConfig extends TerraformModuleUserConfig {
  /**
  * The subnet name for the ACI connector Linux.
  */
  readonly aciConnectorLinuxSubnetName?: string;
  /**
  * The API server access profile for the Kubernetes cluster.
  */
  readonly apiServerAccessProfile?: string[];
  /**
  * The auto scaler profile for the Kubernetes cluster.
  */
  readonly autoScalerProfile?: any;
  /**
  * (Optional) The upgrade channel for this Kubernetes Cluster. Possible values are `patch`, `rapid`, `node-image` and `stable`. By default automatic-upgrades are turned off. Note that you cannot specify the patch version using `kubernetes_version` or `orchestrator_version` when using the `patch` upgrade channel. See [the documentation](https://learn.microsoft.com/en-us/azure/aks/auto-upgrade-cluster) for more information
  */
  readonly automaticUpgradeChannel?: string;
  /**
  * The Azure Active Directory role-based access control for the Kubernetes cluster.
  */
  readonly azureActiveDirectoryRoleBasedAccessControl?: any;
  /**
  * Whether or not Azure Policy is enabled for the Kubernetes cluster.
  * true
  */
  readonly azurePolicyEnabled?: boolean;
  /**
  * Optional. The suffix to append to the Kubernetes cluster name if create_before_destroy is set to true on the nodepools.
  */
  readonly clusterSuffix?: string;
  /**
  * Whether or not cost analysis is enabled for the Kubernetes cluster. SKU must be Standard or Premium.
  */
  readonly costAnalysisEnabled?: boolean;
  /**
  * Whether or not to create node pools before destroying the old ones. This is the opposite of the default behavior. Set this to true if zero downtime is required during nodepool redeployments such as changes to snapshot_id.
  */
  readonly createNodepoolsBeforeDestroy?: boolean;
  /**
  * A map describing customer-managed keys to associate with the resource. This includes the following properties:
- `key_vault_resource_id` - The resource ID of the Key Vault where the key is stored.
- `key_name` - The name of the key.
- `key_version` - (Optional) The version of the key. If not specified, the latest version is used.
- `user_assigned_identity` - (Optional) An object representing a user-assigned identity with the following properties:
  - `resource_id` - The resource ID of the user-assigned identity.

  */
  readonly customerManagedKey?: any;
  /**
  * Required. The default node pool for the Kubernetes cluster.
  */
  readonly defaultNodePool: any;
  /**
  * The log analytics workspace ID for the Microsoft Defender.
  */
  readonly defenderLogAnalyticsWorkspaceId?: string;
  /**
  * A map of diagnostic settings to create on the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.

- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.
- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.
- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `["allLogs"]`.
- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `["AllMetrics"]`.
- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.
- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.
- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.
- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.
- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.
- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.

  * [object Object]
  */
  readonly diagnosticSettings?: any;
  /**
  * The disk encryption set ID for the Kubernetes cluster.
  */
  readonly diskEncryptionSetId?: string;
  /**
  * The DNS prefix specified when creating the managed cluster. If you do not specify one, a random prefix will be generated.
  */
  readonly dnsPrefix?: string;
  /**
  * The Private Cluster DNS prefix specified when creating a private cluster. Required if deploying private cluster.
  */
  readonly dnsPrefixPrivateCluster?: string;
  /**
  * This variable controls whether or not telemetry is enabled for the module.
For more information see <https://aka.ms/avm/telemetryinfo>.
If it is set to false, then no telemetry will be collected.

  * true
  */
  readonly enableTelemetry?: boolean;
  /**
  * Whether or not HTTP application routing is enabled for the Kubernetes cluster.
  */
  readonly httpApplicationRoutingEnabled?: boolean;
  /**
  * The HTTP proxy configuration for the Kubernetes cluster.
  */
  readonly httpProxyConfig?: any;
  /**
  * The type and id of identities to use for the Kubernetes cluster.
  * [object Object]
  */
  readonly identity?: any;
  /**
  * Whether or not the image cleaner is enabled for the Kubernetes cluster.
  */
  readonly imageCleanerEnabled?: boolean;
  /**
  * The ingress application gateway for the Kubernetes cluster.
  */
  readonly ingressApplicationGateway?: any;
  /**
  * The key management service for the Kubernetes cluster.
  */
  readonly keyManagementService?: any;
  /**
  * The key vault secrets provider for the Kubernetes cluster. Either rotation enabled or rotation interval must be specified.
  */
  readonly keyVaultSecretsProvider?: any;
  /**
  * The kubelet identity for the Kubernetes cluster.
  */
  readonly kubeletIdentity?: any;
  /**
  * The version of Kubernetes to use for the managed cluster.
  */
  readonly kubernetesVersion?: string;
  /**
  * The Linux profile for the Kubernetes cluster.
  */
  readonly linuxProfile?: any;
  /**
  * Defaults to true. Whether or not the local account should be disabled on the Kubernetes cluster. Azure RBAC must be enabled.
  * true
  */
  readonly localAccountDisabled?: boolean;
  /**
  * Azure region where the resource should be deployed.
  */
  readonly location: string;
  /**
  * Controls the Resource Lock configuration for this resource. The following properties can be specified:

- `kind` - (Required) The type of lock. Possible values are `\"CanNotDelete\"` and `\"ReadOnly\"`.
- `name` - (Optional) The name of the lock. If not specified, a name will be generated based on the `kind` value. Changing this forces the creation of a new resource.

  */
  readonly lock?: any;
  /**
  * The maintenance window for the Kubernetes cluster.
  */
  readonly maintenanceWindow?: any;
  /**
  * values for maintenance window auto upgrade
  */
  readonly maintenanceWindowAutoUpgrade?: any;
  /**
  * values for maintenance window node os
  */
  readonly maintenanceWindowNodeOs?: any;
  /**
  * Controls the Managed Identity configuration on this resource. The following properties can be specified:

- `system_assigned` - (Optional) Specifies if the System Assigned Managed Identity should be enabled.
- `user_assigned_resource_ids` - (Optional) Specifies a list of User Assigned Managed Identity resource IDs to be assigned to this resource.

  * [object Object]
  */
  readonly managedIdentities?: any;
  /**
  * The monitor metrics for the Kubernetes cluster. Both required if enabling Prometheus
  */
  readonly monitorMetrics?: any;
  /**
  * The name of this resource.
  */
  readonly name: string;
  /**
  * The network profile for the Kubernetes cluster.
  * [object Object]
  */
  readonly networkProfile?: any;
  /**
  * The node OS channel upgrade for the Kubernetes cluster.
  * NodeImage
  */
  readonly nodeOsChannelUpgrade?: string;
  /**
  * Optional. The additional node pools for the Kubernetes cluster.
  * [object Object]
  */
  readonly nodePools?: any;
  /**
  * The resource group name for the node pool.
  */
  readonly nodeResourceGroupName?: string;
  /**
  * Whether or not the OIDC issuer is enabled for the Kubernetes cluster.
  */
  readonly oidcIssuerEnabled?: boolean;
  /**
  * Optional. The OMS agent for the Kubernetes cluster.
  */
  readonly omsAgent?: any;
  /**
  * Whether or not open service mesh is enabled for the Kubernetes cluster.
  */
  readonly openServiceMeshEnabled?: boolean;
  /**
  * Whether or not the Kubernetes cluster is private.
  */
  readonly privateClusterEnabled?: boolean;
  /**
  * Whether or not the private cluster public FQDN is enabled for the Kubernetes cluster.
  */
  readonly privateClusterPublicFqdnEnabled?: boolean;
  /**
  * The private DNS zone ID for the Kubernetes cluster.
  */
  readonly privateDnsZoneId?: string;
  /**
  *   A map of private endpoints to create on the Key Vault. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.
  
  - `name` - (Optional) The name of the private endpoint. One will be generated if not set.
  - `role_assignments` - (Optional) A map of role assignments to create on the private endpoint. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time. See `var.role_assignments` for more information.
    - `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.
    - `principal_id` - The ID of the principal to assign the role to.
    - `description` - (Optional) The description of the role assignment.
    - `skip_service_principal_aad_check` - (Optional) If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.
    - `condition` - (Optional) The condition which will be used to scope the role assignment.
    - `condition_version` - (Optional) The version of the condition syntax. Leave as `null` if you are not using a condition, if you are then valid values are '2.0'.
    - `delegated_managed_identity_resource_id` - (Optional) The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created. This field is only used in cross-tenant scenario.
    - `principal_type` - (Optional) The type of the `principal_id`. Possible values are `User`, `Group` and `ServicePrincipal`. It is necessary to explicitly set this attribute when creating role assignments if the principal creating the assignment is constrained by ABAC rules that filters on the PrincipalType attribute.
  - `lock` - (Optional) The lock level to apply to the private endpoint. Default is `None`. Possible values are `None`, `CanNotDelete`, and `ReadOnly`.
    - `kind` - (Required) The type of lock. Possible values are `\"CanNotDelete\"` and `\"ReadOnly\"`.
    - `name` - (Optional) The name of the lock. If not specified, a name will be generated based on the `kind` value. Changing this forces the creation of a new resource.
  - `tags` - (Optional) A mapping of tags to assign to the private endpoint.
  - `subnet_resource_id` - The resource ID of the subnet to deploy the private endpoint in.
  - `subresource_name` - The name of the sub resource for the private endpoint.
  - `private_dns_zone_group_name` - (Optional) The name of the private DNS zone group. One will be generated if not set.
  - `private_dns_zone_resource_ids` - (Optional) A set of resource IDs of private DNS zones to associate with the private endpoint. If not set, no zone groups will be created and the private endpoint will not be associated with any private DNS zones. DNS records must be managed external to this module.
  - `application_security_group_resource_ids` - (Optional) A map of resource IDs of application security groups to associate with the private endpoint. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.
  - `private_service_connection_name` - (Optional) The name of the private service connection. One will be generated if not set.
  - `network_interface_name` - (Optional) The name of the network interface. One will be generated if not set.
  - `location` - (Optional) The Azure location where the resources will be deployed. Defaults to the location of the resource group.
  - `resource_group_name` - (Optional) The resource group where the resources will be deployed. Defaults to the resource group of the Key Vault.
  - `ip_configurations` - (Optional) A map of IP configurations to create on the private endpoint. If not specified the platform will create one. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.
    - `name` - The name of the IP configuration.
    - `private_ip_address` - The private IP address of the IP configuration.

  * [object Object]
  */
  readonly privateEndpoints?: any;
  /**
  * Whether to manage private DNS zone groups with this module. If set to false, you must manage private DNS zone groups externally, e.g. using Azure Policy.
  * true
  */
  readonly privateEndpointsManageDnsZoneGroup?: boolean;
  /**
  * The resource group where the resources will be deployed.
  */
  readonly resourceGroupName: string;
  /**
  *   A map of role assignments to create on the <RESOURCE>. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.
  
  - `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.
  - `principal_id` - The ID of the principal to assign the role to.
  - `description` - (Optional) The description of the role assignment.
  - `skip_service_principal_aad_check` - (Optional) If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.
  - `condition` - (Optional) The condition which will be used to scope the role assignment.
  - `condition_version` - (Optional) The version of the condition syntax. Leave as `null` if you are not using a condition, if you are then valid values are '2.0'.
  - `delegated_managed_identity_resource_id` - (Optional) The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created. This field is only used in cross-tenant scenario.
  - `principal_type` - (Optional) The type of the `principal_id`. Possible values are `User`, `Group` and `ServicePrincipal`. It is necessary to explicitly set this attribute when creating role assignments if the principal creating the assignment is constrained by ABAC rules that filters on the PrincipalType attribute.
  
  > Note: only set `skip_service_principal_aad_check` to true if you are assigning a role to a service principal.

  * [object Object]
  */
  readonly roleAssignments?: any;
  /**
  * Whether or not role-based access control is enabled for the Kubernetes cluster.
  * true
  */
  readonly roleBasedAccessControlEnabled?: boolean;
  /**
  * Whether or not the run command is enabled for the Kubernetes cluster.
  */
  readonly runCommandEnabled?: boolean;
  /**
  * The service mesh profile for the Kubernetes cluster.
  */
  readonly serviceMeshProfile?: any;
  /**
  * The service principal for the Kubernetes cluster. Only specify this or identity, not both.
  */
  readonly servicePrincipal?: any;
  /**
  * The SKU tier of the Kubernetes Cluster. Possible values are Free, Standard, and Premium.
  * Standard
  */
  readonly skuTier?: string;
  /**
  * Optional. The storage profile for the Kubernetes cluster.
  */
  readonly storageProfile?: any;
  /**
  * The support plan for the Kubernetes cluster. Defaults to KubernetesOfficial.
  * KubernetesOfficial
  */
  readonly supportPlan?: string;
  /**
  * (Optional) Tags of the resource.
  * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
  */
  readonly tags?: { [key: string]: string };
  /**
  * The web app routing DNS zone IDs for the Kubernetes cluster.
  * [object Object]
  * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
  */
  readonly webAppRoutingDnsZoneIds?: { [key: string]: string[] };
  /**
  * The Windows profile for the Kubernetes cluster.
  */
  readonly windowsProfile?: any;
  /**
  * The workload autoscaler profile for the Kubernetes cluster.
  */
  readonly workloadAutoscalerProfile?: any;
  /**
  * Whether or not workload identity is enabled for the Kubernetes cluster.
  */
  readonly workloadIdentityEnabled?: boolean;
}
/**
* Defines an Aks based on a Terraform module
*
* Docs at Terraform Registry: {@link https://registry.terraform.io/modules/Azure/avm-res-containerservice-managedcluster/azurerm/0.1.3 Azure/avm-res-containerservice-managedcluster/azurerm}
*/
export class Aks extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: AksConfig) {
    super(scope, id, {
      ...config,
      source: 'Azure/avm-res-containerservice-managedcluster/azurerm',
      version: '0.1.3',
    });
    this.aciConnectorLinuxSubnetName = config.aciConnectorLinuxSubnetName;
    this.apiServerAccessProfile = config.apiServerAccessProfile;
    this.autoScalerProfile = config.autoScalerProfile;
    this.automaticUpgradeChannel = config.automaticUpgradeChannel;
    this.azureActiveDirectoryRoleBasedAccessControl = config.azureActiveDirectoryRoleBasedAccessControl;
    this.azurePolicyEnabled = config.azurePolicyEnabled;
    this.clusterSuffix = config.clusterSuffix;
    this.costAnalysisEnabled = config.costAnalysisEnabled;
    this.createNodepoolsBeforeDestroy = config.createNodepoolsBeforeDestroy;
    this.customerManagedKey = config.customerManagedKey;
    this.defaultNodePool = config.defaultNodePool;
    this.defenderLogAnalyticsWorkspaceId = config.defenderLogAnalyticsWorkspaceId;
    this.diagnosticSettings = config.diagnosticSettings;
    this.diskEncryptionSetId = config.diskEncryptionSetId;
    this.dnsPrefix = config.dnsPrefix;
    this.dnsPrefixPrivateCluster = config.dnsPrefixPrivateCluster;
    this.enableTelemetry = config.enableTelemetry;
    this.httpApplicationRoutingEnabled = config.httpApplicationRoutingEnabled;
    this.httpProxyConfig = config.httpProxyConfig;
    this.identity = config.identity;
    this.imageCleanerEnabled = config.imageCleanerEnabled;
    this.ingressApplicationGateway = config.ingressApplicationGateway;
    this.keyManagementService = config.keyManagementService;
    this.keyVaultSecretsProvider = config.keyVaultSecretsProvider;
    this.kubeletIdentity = config.kubeletIdentity;
    this.kubernetesVersion = config.kubernetesVersion;
    this.linuxProfile = config.linuxProfile;
    this.localAccountDisabled = config.localAccountDisabled;
    this.location = config.location;
    this.lock = config.lock;
    this.maintenanceWindow = config.maintenanceWindow;
    this.maintenanceWindowAutoUpgrade = config.maintenanceWindowAutoUpgrade;
    this.maintenanceWindowNodeOs = config.maintenanceWindowNodeOs;
    this.managedIdentities = config.managedIdentities;
    this.monitorMetrics = config.monitorMetrics;
    this.name = config.name;
    this.networkProfile = config.networkProfile;
    this.nodeOsChannelUpgrade = config.nodeOsChannelUpgrade;
    this.nodePools = config.nodePools;
    this.nodeResourceGroupName = config.nodeResourceGroupName;
    this.oidcIssuerEnabled = config.oidcIssuerEnabled;
    this.omsAgent = config.omsAgent;
    this.openServiceMeshEnabled = config.openServiceMeshEnabled;
    this.privateClusterEnabled = config.privateClusterEnabled;
    this.privateClusterPublicFqdnEnabled = config.privateClusterPublicFqdnEnabled;
    this.privateDnsZoneId = config.privateDnsZoneId;
    this.privateEndpoints = config.privateEndpoints;
    this.privateEndpointsManageDnsZoneGroup = config.privateEndpointsManageDnsZoneGroup;
    this.resourceGroupName = config.resourceGroupName;
    this.roleAssignments = config.roleAssignments;
    this.roleBasedAccessControlEnabled = config.roleBasedAccessControlEnabled;
    this.runCommandEnabled = config.runCommandEnabled;
    this.serviceMeshProfile = config.serviceMeshProfile;
    this.servicePrincipal = config.servicePrincipal;
    this.skuTier = config.skuTier;
    this.storageProfile = config.storageProfile;
    this.supportPlan = config.supportPlan;
    this.tags = config.tags;
    this.webAppRoutingDnsZoneIds = config.webAppRoutingDnsZoneIds;
    this.windowsProfile = config.windowsProfile;
    this.workloadAutoscalerProfile = config.workloadAutoscalerProfile;
    this.workloadIdentityEnabled = config.workloadIdentityEnabled;
  }
  public get aciConnectorLinuxSubnetName(): string | undefined {
    return this.inputs['aci_connector_linux_subnet_name'] as string | undefined;
  }
  public set aciConnectorLinuxSubnetName(value: string | undefined) {
    this.inputs['aci_connector_linux_subnet_name'] = value;
  }
  public get apiServerAccessProfile(): string[] | undefined {
    return this.inputs['api_server_access_profile'] as string[] | undefined;
  }
  public set apiServerAccessProfile(value: string[] | undefined) {
    this.inputs['api_server_access_profile'] = value;
  }
  public get autoScalerProfile(): any | undefined {
    return this.inputs['auto_scaler_profile'] as any | undefined;
  }
  public set autoScalerProfile(value: any | undefined) {
    this.inputs['auto_scaler_profile'] = value;
  }
  public get automaticUpgradeChannel(): string | undefined {
    return this.inputs['automatic_upgrade_channel'] as string | undefined;
  }
  public set automaticUpgradeChannel(value: string | undefined) {
    this.inputs['automatic_upgrade_channel'] = value;
  }
  public get azureActiveDirectoryRoleBasedAccessControl(): any | undefined {
    return this.inputs['azure_active_directory_role_based_access_control'] as any | undefined;
  }
  public set azureActiveDirectoryRoleBasedAccessControl(value: any | undefined) {
    this.inputs['azure_active_directory_role_based_access_control'] = value;
  }
  public get azurePolicyEnabled(): boolean | undefined {
    return this.inputs['azure_policy_enabled'] as boolean | undefined;
  }
  public set azurePolicyEnabled(value: boolean | undefined) {
    this.inputs['azure_policy_enabled'] = value;
  }
  public get clusterSuffix(): string | undefined {
    return this.inputs['cluster_suffix'] as string | undefined;
  }
  public set clusterSuffix(value: string | undefined) {
    this.inputs['cluster_suffix'] = value;
  }
  public get costAnalysisEnabled(): boolean | undefined {
    return this.inputs['cost_analysis_enabled'] as boolean | undefined;
  }
  public set costAnalysisEnabled(value: boolean | undefined) {
    this.inputs['cost_analysis_enabled'] = value;
  }
  public get createNodepoolsBeforeDestroy(): boolean | undefined {
    return this.inputs['create_nodepools_before_destroy'] as boolean | undefined;
  }
  public set createNodepoolsBeforeDestroy(value: boolean | undefined) {
    this.inputs['create_nodepools_before_destroy'] = value;
  }
  public get customerManagedKey(): any | undefined {
    return this.inputs['customer_managed_key'] as any | undefined;
  }
  public set customerManagedKey(value: any | undefined) {
    this.inputs['customer_managed_key'] = value;
  }
  public get defaultNodePool(): any {
    return this.inputs['default_node_pool'] as any;
  }
  public set defaultNodePool(value: any) {
    this.inputs['default_node_pool'] = value;
  }
  public get defenderLogAnalyticsWorkspaceId(): string | undefined {
    return this.inputs['defender_log_analytics_workspace_id'] as string | undefined;
  }
  public set defenderLogAnalyticsWorkspaceId(value: string | undefined) {
    this.inputs['defender_log_analytics_workspace_id'] = value;
  }
  public get diagnosticSettings(): any | undefined {
    return this.inputs['diagnostic_settings'] as any | undefined;
  }
  public set diagnosticSettings(value: any | undefined) {
    this.inputs['diagnostic_settings'] = value;
  }
  public get diskEncryptionSetId(): string | undefined {
    return this.inputs['disk_encryption_set_id'] as string | undefined;
  }
  public set diskEncryptionSetId(value: string | undefined) {
    this.inputs['disk_encryption_set_id'] = value;
  }
  public get dnsPrefix(): string | undefined {
    return this.inputs['dns_prefix'] as string | undefined;
  }
  public set dnsPrefix(value: string | undefined) {
    this.inputs['dns_prefix'] = value;
  }
  public get dnsPrefixPrivateCluster(): string | undefined {
    return this.inputs['dns_prefix_private_cluster'] as string | undefined;
  }
  public set dnsPrefixPrivateCluster(value: string | undefined) {
    this.inputs['dns_prefix_private_cluster'] = value;
  }
  public get enableTelemetry(): boolean | undefined {
    return this.inputs['enable_telemetry'] as boolean | undefined;
  }
  public set enableTelemetry(value: boolean | undefined) {
    this.inputs['enable_telemetry'] = value;
  }
  public get httpApplicationRoutingEnabled(): boolean | undefined {
    return this.inputs['http_application_routing_enabled'] as boolean | undefined;
  }
  public set httpApplicationRoutingEnabled(value: boolean | undefined) {
    this.inputs['http_application_routing_enabled'] = value;
  }
  public get httpProxyConfig(): any | undefined {
    return this.inputs['http_proxy_config'] as any | undefined;
  }
  public set httpProxyConfig(value: any | undefined) {
    this.inputs['http_proxy_config'] = value;
  }
  public get identity(): any | undefined {
    return this.inputs['identity'] as any | undefined;
  }
  public set identity(value: any | undefined) {
    this.inputs['identity'] = value;
  }
  public get imageCleanerEnabled(): boolean | undefined {
    return this.inputs['image_cleaner_enabled'] as boolean | undefined;
  }
  public set imageCleanerEnabled(value: boolean | undefined) {
    this.inputs['image_cleaner_enabled'] = value;
  }
  public get ingressApplicationGateway(): any | undefined {
    return this.inputs['ingress_application_gateway'] as any | undefined;
  }
  public set ingressApplicationGateway(value: any | undefined) {
    this.inputs['ingress_application_gateway'] = value;
  }
  public get keyManagementService(): any | undefined {
    return this.inputs['key_management_service'] as any | undefined;
  }
  public set keyManagementService(value: any | undefined) {
    this.inputs['key_management_service'] = value;
  }
  public get keyVaultSecretsProvider(): any | undefined {
    return this.inputs['key_vault_secrets_provider'] as any | undefined;
  }
  public set keyVaultSecretsProvider(value: any | undefined) {
    this.inputs['key_vault_secrets_provider'] = value;
  }
  public get kubeletIdentity(): any | undefined {
    return this.inputs['kubelet_identity'] as any | undefined;
  }
  public set kubeletIdentity(value: any | undefined) {
    this.inputs['kubelet_identity'] = value;
  }
  public get kubernetesVersion(): string | undefined {
    return this.inputs['kubernetes_version'] as string | undefined;
  }
  public set kubernetesVersion(value: string | undefined) {
    this.inputs['kubernetes_version'] = value;
  }
  public get linuxProfile(): any | undefined {
    return this.inputs['linux_profile'] as any | undefined;
  }
  public set linuxProfile(value: any | undefined) {
    this.inputs['linux_profile'] = value;
  }
  public get localAccountDisabled(): boolean | undefined {
    return this.inputs['local_account_disabled'] as boolean | undefined;
  }
  public set localAccountDisabled(value: boolean | undefined) {
    this.inputs['local_account_disabled'] = value;
  }
  public get location(): string {
    return this.inputs['location'] as string;
  }
  public set location(value: string) {
    this.inputs['location'] = value;
  }
  public get lock(): any | undefined {
    return this.inputs['lock'] as any | undefined;
  }
  public set lock(value: any | undefined) {
    this.inputs['lock'] = value;
  }
  public get maintenanceWindow(): any | undefined {
    return this.inputs['maintenance_window'] as any | undefined;
  }
  public set maintenanceWindow(value: any | undefined) {
    this.inputs['maintenance_window'] = value;
  }
  public get maintenanceWindowAutoUpgrade(): any | undefined {
    return this.inputs['maintenance_window_auto_upgrade'] as any | undefined;
  }
  public set maintenanceWindowAutoUpgrade(value: any | undefined) {
    this.inputs['maintenance_window_auto_upgrade'] = value;
  }
  public get maintenanceWindowNodeOs(): any | undefined {
    return this.inputs['maintenance_window_node_os'] as any | undefined;
  }
  public set maintenanceWindowNodeOs(value: any | undefined) {
    this.inputs['maintenance_window_node_os'] = value;
  }
  public get managedIdentities(): any | undefined {
    return this.inputs['managed_identities'] as any | undefined;
  }
  public set managedIdentities(value: any | undefined) {
    this.inputs['managed_identities'] = value;
  }
  public get monitorMetrics(): any | undefined {
    return this.inputs['monitor_metrics'] as any | undefined;
  }
  public set monitorMetrics(value: any | undefined) {
    this.inputs['monitor_metrics'] = value;
  }
  public get name(): string {
    return this.inputs['name'] as string;
  }
  public set name(value: string) {
    this.inputs['name'] = value;
  }
  public get networkProfile(): any | undefined {
    return this.inputs['network_profile'] as any | undefined;
  }
  public set networkProfile(value: any | undefined) {
    this.inputs['network_profile'] = value;
  }
  public get nodeOsChannelUpgrade(): string | undefined {
    return this.inputs['node_os_channel_upgrade'] as string | undefined;
  }
  public set nodeOsChannelUpgrade(value: string | undefined) {
    this.inputs['node_os_channel_upgrade'] = value;
  }
  public get nodePools(): any | undefined {
    return this.inputs['node_pools'] as any | undefined;
  }
  public set nodePools(value: any | undefined) {
    this.inputs['node_pools'] = value;
  }
  public get nodeResourceGroupName(): string | undefined {
    return this.inputs['node_resource_group_name'] as string | undefined;
  }
  public set nodeResourceGroupName(value: string | undefined) {
    this.inputs['node_resource_group_name'] = value;
  }
  public get oidcIssuerEnabled(): boolean | undefined {
    return this.inputs['oidc_issuer_enabled'] as boolean | undefined;
  }
  public set oidcIssuerEnabled(value: boolean | undefined) {
    this.inputs['oidc_issuer_enabled'] = value;
  }
  public get omsAgent(): any | undefined {
    return this.inputs['oms_agent'] as any | undefined;
  }
  public set omsAgent(value: any | undefined) {
    this.inputs['oms_agent'] = value;
  }
  public get openServiceMeshEnabled(): boolean | undefined {
    return this.inputs['open_service_mesh_enabled'] as boolean | undefined;
  }
  public set openServiceMeshEnabled(value: boolean | undefined) {
    this.inputs['open_service_mesh_enabled'] = value;
  }
  public get privateClusterEnabled(): boolean | undefined {
    return this.inputs['private_cluster_enabled'] as boolean | undefined;
  }
  public set privateClusterEnabled(value: boolean | undefined) {
    this.inputs['private_cluster_enabled'] = value;
  }
  public get privateClusterPublicFqdnEnabled(): boolean | undefined {
    return this.inputs['private_cluster_public_fqdn_enabled'] as boolean | undefined;
  }
  public set privateClusterPublicFqdnEnabled(value: boolean | undefined) {
    this.inputs['private_cluster_public_fqdn_enabled'] = value;
  }
  public get privateDnsZoneId(): string | undefined {
    return this.inputs['private_dns_zone_id'] as string | undefined;
  }
  public set privateDnsZoneId(value: string | undefined) {
    this.inputs['private_dns_zone_id'] = value;
  }
  public get privateEndpoints(): any | undefined {
    return this.inputs['private_endpoints'] as any | undefined;
  }
  public set privateEndpoints(value: any | undefined) {
    this.inputs['private_endpoints'] = value;
  }
  public get privateEndpointsManageDnsZoneGroup(): boolean | undefined {
    return this.inputs['private_endpoints_manage_dns_zone_group'] as boolean | undefined;
  }
  public set privateEndpointsManageDnsZoneGroup(value: boolean | undefined) {
    this.inputs['private_endpoints_manage_dns_zone_group'] = value;
  }
  public get resourceGroupName(): string {
    return this.inputs['resource_group_name'] as string;
  }
  public set resourceGroupName(value: string) {
    this.inputs['resource_group_name'] = value;
  }
  public get roleAssignments(): any | undefined {
    return this.inputs['role_assignments'] as any | undefined;
  }
  public set roleAssignments(value: any | undefined) {
    this.inputs['role_assignments'] = value;
  }
  public get roleBasedAccessControlEnabled(): boolean | undefined {
    return this.inputs['role_based_access_control_enabled'] as boolean | undefined;
  }
  public set roleBasedAccessControlEnabled(value: boolean | undefined) {
    this.inputs['role_based_access_control_enabled'] = value;
  }
  public get runCommandEnabled(): boolean | undefined {
    return this.inputs['run_command_enabled'] as boolean | undefined;
  }
  public set runCommandEnabled(value: boolean | undefined) {
    this.inputs['run_command_enabled'] = value;
  }
  public get serviceMeshProfile(): any | undefined {
    return this.inputs['service_mesh_profile'] as any | undefined;
  }
  public set serviceMeshProfile(value: any | undefined) {
    this.inputs['service_mesh_profile'] = value;
  }
  public get servicePrincipal(): any | undefined {
    return this.inputs['service_principal'] as any | undefined;
  }
  public set servicePrincipal(value: any | undefined) {
    this.inputs['service_principal'] = value;
  }
  public get skuTier(): string | undefined {
    return this.inputs['sku_tier'] as string | undefined;
  }
  public set skuTier(value: string | undefined) {
    this.inputs['sku_tier'] = value;
  }
  public get storageProfile(): any | undefined {
    return this.inputs['storage_profile'] as any | undefined;
  }
  public set storageProfile(value: any | undefined) {
    this.inputs['storage_profile'] = value;
  }
  public get supportPlan(): string | undefined {
    return this.inputs['support_plan'] as string | undefined;
  }
  public set supportPlan(value: string | undefined) {
    this.inputs['support_plan'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get webAppRoutingDnsZoneIds(): { [key: string]: string[] } | undefined {
    return this.inputs['web_app_routing_dns_zone_ids'] as { [key: string]: string[] } | undefined;
  }
  public set webAppRoutingDnsZoneIds(value: { [key: string]: string[] } | undefined) {
    this.inputs['web_app_routing_dns_zone_ids'] = value;
  }
  public get windowsProfile(): any | undefined {
    return this.inputs['windows_profile'] as any | undefined;
  }
  public set windowsProfile(value: any | undefined) {
    this.inputs['windows_profile'] = value;
  }
  public get workloadAutoscalerProfile(): any | undefined {
    return this.inputs['workload_autoscaler_profile'] as any | undefined;
  }
  public set workloadAutoscalerProfile(value: any | undefined) {
    this.inputs['workload_autoscaler_profile'] = value;
  }
  public get workloadIdentityEnabled(): boolean | undefined {
    return this.inputs['workload_identity_enabled'] as boolean | undefined;
  }
  public set workloadIdentityEnabled(value: boolean | undefined) {
    this.inputs['workload_identity_enabled'] = value;
  }
  public get kubeletIdentityIdOutput() {
    return this.getString('kubelet_identity_id')
  }
  public get nameOutput() {
    return this.getString('name')
  }
  public get nodepoolResourceIdsOutput() {
    return this.getString('nodepool_resource_ids')
  }
  public get privateEndpointsOutput() {
    return this.getString('private_endpoints')
  }
  public get resourceIdOutput() {
    return this.getString('resource_id')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
