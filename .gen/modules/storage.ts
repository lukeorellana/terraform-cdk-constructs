// generated by cdktf get
// Azure/avm-res-storage-storageaccount/azurerm
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface StorageConfig extends TerraformModuleUserConfig {
  /**
  * (Optional) Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
  * Hot
  */
  readonly accessTier?: string;
  /**
  * (Optional) Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Defaults to `StorageV2`.
  * StorageV2
  */
  readonly accountKind?: string;
  /**
  * (Required) Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS`, `ZRS`, `GZRS` and `RAGZRS`.  Defaults to `ZRS`
  * ZRS
  */
  readonly accountReplicationType?: string;
  /**
  * (Required) Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `BlockBlobStorage` and `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
  * Standard
  */
  readonly accountTier?: string;
  /**
  * (Optional) Allow or disallow nested items within this Account to opt into being public. Defaults to `false`.
  */
  readonly allowNestedItemsToBePublic?: boolean;
  /**
  * (Optional) Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. Possible values are `AAD` and `PrivateLink`.
  */
  readonly allowedCopyScope?: string;
  /**
  * - `directory_type` - (Required) Specifies the directory service used. Possible values are `AADDS`, `AD` and `AADKERB`.
- `default_share_level_permission` - (Optional) Specifies the default share level permissions applied to all users. Possible values are StorageFileDataSmbShareReader, StorageFileDataSmbShareContributor, StorageFileDataSmbShareElevatedContributor, or None.

---
`active_directory` block supports the following:
- `domain_guid` - (Required) Specifies the domain GUID.
- `domain_name` - (Required) Specifies the primary domain that the AD DNS server is authoritative for.
- `domain_sid` - (Required) Specifies the security identifier (SID).
- `forest_name` - (Required) Specifies the Active Directory forest.
- `netbios_domain_name` - (Required) Specifies the NetBIOS domain name.
- `storage_sid` - (Required) Specifies the security identifier (SID) for Azure Storage.

  */
  readonly azureFilesAuthentication?: any;
  /**
  * - `change_feed_enabled` - (Optional) Is the blob service properties for change feed events enabled? Default to `false`.
- `change_feed_retention_in_days` - (Optional) The duration of change feed events retention in days. The possible values are between 1 and 146000 days (400 years). Setting this to null (or omit this in the configuration file) indicates an infinite retention of the change feed.
- `default_service_version` - (Optional) The API Version which should be used by default for requests to the Data Plane API if an incoming request doesn't specify an API Version.
- `last_access_time_enabled` - (Optional) Is the last access time based tracking enabled? Default to `false`.
- `versioning_enabled` - (Optional) Is versioning enabled? Default to `false`.

---
`container_delete_retention_policy` block supports the following:
- `days` - (Optional) Specifies the number of days that the container should be retained, between `1` and `365` days. Defaults to `7`.

---
`cors_rule` block supports the following:
- `allowed_headers` - (Required) A list of headers that are allowed to be a part of the cross-origin request.
- `allowed_methods` - (Required) A list of HTTP methods that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
- `allowed_origins` - (Required) A list of origin domains that will be allowed by CORS.
- `exposed_headers` - (Required) A list of response headers that are exposed to CORS clients.
- `max_age_in_seconds` - (Required) The number of seconds the client should cache a preflight response.

---
`delete_retention_policy` block supports the following:
- `days` - (Optional) Specifies the number of days that the blob should be retained, between `1` and `365` days. Defaults to `7`.

---
`diagnostic_settings` block supports the following:
- `name` - (Optional) The name of the diagnostic setting. Defaults to `null`.
- `log_categories` - (Optional) A set of log categories to enable. Defaults to an empty set.
- `log_groups` - (Optional) A set of log groups to enable. Defaults to `["allLogs"]`.
- `metric_categories` - (Optional) A set of metric categories to enable. Defaults to `["AllMetrics"]`.
- `log_analytics_destination_type` - (Optional) The destination type for log analytics. Defaults to `"Dedicated"`.
- `workspace_resource_id` - (Optional) The resource ID of the Log Analytics workspace. Defaults to `null`.
- `resource_id` - (Optional) The resource ID of the target resource for diagnostics. Defaults to `null`.
- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the Event Hub authorization rule. Defaults to `null`.
- `event_hub_name` - (Optional) The name of the Event Hub. Defaults to `null`.
- `marketplace_partner_resource_id` - (Optional) The resource ID of the marketplace partner. Defaults to `null`.

---
`restore_policy` block supports the following:
- `days` - (Required) Specifies the number of days that the blob can be restored, between `1` and `365` days. This must be less than the `days` specified for `delete_retention_policy`.

  */
  readonly blobProperties?: any;
  /**
  * - `container_access_type` - (Optional) The Access Level configured for this Container. Possible values are `Blob`, `Container` or `None`. Defaults to `None`.
- `metadata` - (Optional) A mapping of MetaData for this Container. All metadata keys should be lowercase.
- `name` - (Required) The name of the Container which should be created within the Storage Account. Changing this forces a new resource to be created.

Supply role assignments in the same way as for `var.role_assignments`.

---
`timeouts` block supports the following:
- `create` - (Defaults to 30 minutes) Used when creating the Storage Container.
- `delete` - (Defaults to 30 minutes) Used when deleting the Storage Container.
- `read` - (Defaults to 5 minutes) Used when retrieving the Storage Container.
- `update` - (Defaults to 30 minutes) Used when updating the Storage Container.

  * [object Object]
  */
  readonly containers?: any;
  /**
  * (Optional) Should cross Tenant replication be enabled? Defaults to `false`.
  */
  readonly crossTenantReplicationEnabled?: boolean;
  /**
  * - `name` - (Required) The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
- `use_subdomain` - (Optional) Should the Custom Domain Name be validated by using indirect CNAME validation?

  */
  readonly customDomain?: any;
  /**
  *     Defines a customer managed key to use for encryption.

    object({
      key_vault_resource_id              = (Required) - The full Azure Resource ID of the key_vault where the customer managed key will be referenced from.
      key_name                           = (Required) - The key name for the customer managed key in the key vault.
      key_version                        = (Optional) - The version of the key to use
      user_assigned_identity_resource_id = (Optional) - The user assigned identity to use when access the key vault
    })

    Example Inputs:
    ```terraform
    customer_managed_key = {
      key_vault_resource_id = "/subscriptions/0000000-0000-0000-0000-000000000000/resourceGroups/test-resource-group/providers/Microsoft.KeyVault/vaults/example-key-vault"
      key_name              = "sample-customer-key"
    }
    ```

  */
  readonly customerManagedKey?: any;
  /**
  * (Optional) Default to Azure Active Directory authorization in the Azure portal when accessing the Storage Account. The default value is `false`
  */
  readonly defaultToOauthAuthentication?: boolean;
  /**
  * A map of diagnostic settings to create on the Blob Storage within Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.

- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.
- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.
- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `["allLogs"]`.
- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `["AllMetrics"]`.
- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.
- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.
- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.
- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.
- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.
- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.

  * [object Object]
  */
  readonly diagnosticSettingsBlob?: any;
  /**
  * A map of diagnostic settings to create on the Azure Files Storage within Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.

- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.
- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.
- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `["allLogs"]`.
- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `["AllMetrics"]`.
- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.
- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.
- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.
- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.
- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.
- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.

  * [object Object]
  */
  readonly diagnosticSettingsFile?: any;
  /**
  * A map of diagnostic settings to create on the Queue Storage within Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.

- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.
- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.
- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `["allLogs"]`.
- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `["AllMetrics"]`.
- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.
- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.
- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.
- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.
- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.
- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.

  * [object Object]
  */
  readonly diagnosticSettingsQueue?: any;
  /**
  * A map of diagnostic settings to create on the Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.

- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.
- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.
- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `["allLogs"]`.
- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `["AllMetrics"]`.
- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.
- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.
- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.
- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.
- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.
- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.

  * [object Object]
  */
  readonly diagnosticSettingsStorageAccount?: any;
  /**
  * A map of diagnostic settings to create on the Table Storage within the Storage Account. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.

- `name` - (Optional) The name of the diagnostic setting. One will be generated if not set, however this will not be unique if you want to create multiple diagnostic setting resources.
- `log_categories` - (Optional) A set of log categories to send to the log analytics workspace. Defaults to `[]`.
- `log_groups` - (Optional) A set of log groups to send to the log analytics workspace. Defaults to `["allLogs"]`.
- `metric_categories` - (Optional) A set of metric categories to send to the log analytics workspace. Defaults to `["AllMetrics"]`.
- `log_analytics_destination_type` - (Optional) The destination type for the diagnostic setting. Possible values are `Dedicated` and `AzureDiagnostics`. Defaults to `Dedicated`.
- `workspace_resource_id` - (Optional) The resource ID of the log analytics workspace to send logs and metrics to.
- `storage_account_resource_id` - (Optional) The resource ID of the storage account to send logs and metrics to.
- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the event hub authorization rule to send logs and metrics to.
- `event_hub_name` - (Optional) The name of the event hub. If none is specified, the default event hub will be selected.
- `marketplace_partner_resource_id` - (Optional) The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic LogsLogs.

  * [object Object]
  */
  readonly diagnosticSettingsTable?: any;
  /**
  * (Optional) Specifies the Edge Zone within the Azure Region where this Storage Account should exist. Changing this forces a new Storage Account to be created.
  */
  readonly edgeZone?: string;
  /**
  * This variable controls whether or not telemetry is enabled for the module.
For more information see https://aka.ms/avm/telemetryinfo.
If it is set to false, then no telemetry will be collected.

  * true
  */
  readonly enableTelemetry?: boolean;
  /**
  * (Optional) Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/azure/storage/storage-require-secure-transfer/) for more information. Defaults to `true`.
  * true
  */
  readonly httpsTrafficOnlyEnabled?: boolean;
  /**
  * - `allow_protected_append_writes` - (Required) When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.
- `period_since_creation_in_days` - (Required) The immutability period for the blobs in the container since the policy creation, in days.
- `state` - (Required) Defines the mode of the policy. `Disabled` state disables the policy, `Unlocked` state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, `Locked` state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.

  */
  readonly immutabilityPolicy?: any;
  /**
  * (Optional) Is infrastructure encryption enabled? Changing this forces a new resource to be created. Defaults to `false`.
  */
  readonly infrastructureEncryptionEnabled?: boolean;
  /**
  * (Optional) Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
  */
  readonly isHnsEnabled?: boolean;
  /**
  * (Optional) Is Large File Share Enabled?
  */
  readonly largeFileShareEnabled?: boolean;
  /**
  * - `home_directory` - (Optional) The home directory of the Storage Account Local User.
- `name` - (Required) The name which should be used for this Storage Account Local User. Changing this forces a new Storage Account Local User to be created.
- `ssh_key_enabled` - (Optional) Specifies whether SSH Key Authentication is enabled. Defaults to `false`.
- `ssh_password_enabled` - (Optional) Specifies whether SSH Password Authentication is enabled. Defaults to `false`.

---
`permission_scope` block supports the following:
- `resource_name` - (Required) The container name (when `service` is set to `blob`) or the file share name (when `service` is set to `file`), used by the Storage Account Local User.
- `service` - (Required) The storage service used by this Storage Account Local User. Possible values are `blob` and `file`.

---
`permissions` block supports the following:
- `create` - (Optional) Specifies if the Local User has the create permission for this scope. Defaults to `false`.
- `delete` - (Optional) Specifies if the Local User has the delete permission for this scope. Defaults to `false`.
- `list` - (Optional) Specifies if the Local User has the list permission for this scope. Defaults to `false`.
- `read` - (Optional) Specifies if the Local User has the read permission for this scope. Defaults to `false`.
- `write` - (Optional) Specifies if the Local User has the write permission for this scope. Defaults to `false`.

---
`ssh_authorized_key` block supports the following:
- `description` - (Optional) The description of this SSH authorized key.
- `key` - (Required) The public key value of this SSH authorized key.

---
`timeouts` block supports the following:
- `create` - (Defaults to 30 minutes) Used when creating the Storage Account Local User.
- `delete` - (Defaults to 30 minutes) Used when deleting the Storage Account Local User.
- `read` - (Defaults to 5 minutes) Used when retrieving the Storage Account Local User.
- `update` - (Defaults to 30 minutes) Used when updating the Storage Account Local User.

  * [object Object]
  */
  readonly localUser?: any;
  /**
  * Azure region where the resource should be deployed.
If null, the location will be inferred from the resource group location.

  */
  readonly location: string;
  /**
  * The lock level to apply. Default is `None`. Possible values are `None`, `CanNotDelete`, and `ReadOnly`.
  */
  readonly lock?: any;
  /**
  *   Controls the Managed Identity configuration on this resource. The following properties can be specified:

  - `system_assigned` - (Optional) Specifies if the System Assigned Managed Identity should be enabled.
  - `user_assigned_resource_ids` - (Optional) Specifies a list of User Assigned Managed Identity resource IDs to be assigned to this resource.

  * [object Object]
  */
  readonly managedIdentities?: any;
  /**
  * (Optional) The minimum supported TLS version for the storage account. Possible values are `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLS1_2` for new storage accounts.
  * TLS1_2
  */
  readonly minTlsVersion?: string;
  /**
  * The name of the resource.
  */
  readonly name: string;
  /**
  * > Note the default value for this variable will block all public access to the storage account. If you want to disable all network rules, set this value to `null`.

- `bypass` - (Optional) Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
- `default_action` - (Required) Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
- `ip_rules` - (Optional) List of public IP or IP ranges in CIDR Format. Only IPv4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
- `storage_account_id` - (Required) Specifies the ID of the storage account. Changing this forces a new resource to be created.
- `virtual_network_subnet_ids` - (Optional) A list of virtual network subnet ids to secure the storage account.

---
`private_link_access` block supports the following:
- `endpoint_resource_id` - (Required) The resource id of the resource access rule to be granted access.
- `endpoint_tenant_id` - (Optional) The tenant id of the resource of the resource access rule to be granted access. Defaults to the current tenant id.

---
`timeouts` block supports the following:
- `create` - (Defaults to 60 minutes) Used when creating the  Network Rules for this Storage Account.
- `delete` - (Defaults to 60 minutes) Used when deleting the Network Rules for this Storage Account.
- `read` - (Defaults to 5 minutes) Used when retrieving the Network Rules for this Storage Account.
- `update` - (Defaults to 60 minutes) Used when updating the Network Rules for this Storage Account.

  * [object Object]
  */
  readonly networkRules?: any;
  /**
  * (Optional) Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to `false`.
  */
  readonly nfsv3Enabled?: boolean;
  /**
  * A map of private endpoints to create on the resource. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.

- `name` - (Optional) The name of the private endpoint. One will be generated if not set.
- `role_assignments` - (Optional) A map of role assignments to create on the private endpoint. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time. See `var.role_assignments` for more information.
- `lock` - (Optional) The lock level to apply to the private endpoint. Default is `None`. Possible values are `None`, `CanNotDelete`, and `ReadOnly`.
- `tags` - (Optional) A mapping of tags to assign to the private endpoint.
- `subnet_resource_id` - The resource ID of the subnet to deploy the private endpoint in.
- `subresource_name` - The service name of the private endpoint.  Possible value are `blob`, 'dfs', 'file', `queue`, `table`, and `web`.
- `private_dns_zone_group_name` - (Optional) The name of the private DNS zone group. One will be generated if not set.
- `private_dns_zone_resource_ids` - (Optional) A set of resource IDs of private DNS zones to associate with the private endpoint. If not set, no zone groups will be created and the private endpoint will not be associated with any private DNS zones. DNS records must be managed external to this module.
- `application_security_group_resource_ids` - (Optional) A map of resource IDs of application security groups to associate with the private endpoint. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.
- `private_service_connection_name` - (Optional) The name of the private service connection. One will be generated if not set.
- `network_interface_name` - (Optional) The name of the network interface. One will be generated if not set.
- `location` - (Optional) The Azure location where the resources will be deployed. Defaults to the location of the resource group.
- `resource_group_name` - (Optional) The resource group where the resources will be deployed. Defaults to the resource group of the resource.
- `ip_configurations` - (Optional) A map of IP configurations to create on the private endpoint. If not specified the platform will create one. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.
  - `name` - The name of the IP configuration.
  - `private_ip_address` - The private IP address of the IP configuration.

  * [object Object]
  */
  readonly privateEndpoints?: any;
  /**
  * Whether to manage private DNS zone groups with this module. If set to false, you must manage private DNS zone groups externally, e.g. using Azure Policy.
  * true
  */
  readonly privateEndpointsManageDnsZoneGroup?: boolean;
  /**
  * (Optional) Whether the public network access is enabled? Defaults to `false`.
  */
  readonly publicNetworkAccessEnabled?: boolean;
  /**
  * (Optional) The encryption type of the queue service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
  */
  readonly queueEncryptionKeyType?: string;
  /**
  * 
---
`cors_rule` block supports the following:
- `allowed_headers` - (Required) A list of headers that are allowed to be a part of the cross-origin request.
- `allowed_methods` - (Required) A list of HTTP methods that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
- `allowed_origins` - (Required) A list of origin domains that will be allowed by CORS.
- `exposed_headers` - (Required) A list of response headers that are exposed to CORS clients.
- `max_age_in_seconds` - (Required) The number of seconds the client should cache a preflight response.

---
`diagnostic_settings` block supports the following:
- `name` - (Optional) The name of the diagnostic setting. Defaults to `null`.
- `log_categories` - (Optional) A set of log categories to enable. Defaults to an empty set.
- `log_groups` - (Optional) A set of log groups to enable. Defaults to `["allLogs"]`.
- `metric_categories` - (Optional) A set of metric categories to enable. Defaults to `["AllMetrics"]`.
- `log_analytics_destination_type` - (Optional) The destination type for log analytics. Defaults to `"Dedicated"`.
- `workspace_resource_id` - (Optional) The resource ID of the Log Analytics workspace. Defaults to `null`.
- `resource_id` - (Optional) The resource ID of the target resource for diagnostics. Defaults to `null`.
- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the Event Hub authorization rule. Defaults to `null`.
- `event_hub_name` - (Optional) The name of the Event Hub. Defaults to `null`.
- `marketplace_partner_resource_id` - (Optional) The resource ID of the marketplace partner. Defaults to `null`.

---
`hour_metrics` block supports the following:
- `enabled` - (Required) Indicates whether hour metrics are enabled for the Queue service.
- `include_apis` - (Optional) Indicates whether metrics should generate summary statistics for called API operations.
- `retention_policy_days` - (Optional) Specifies the number of days that logs will be retained.
- `version` - (Required) The version of storage analytics to configure.

---
`logging` block supports the following:
- `delete` - (Required) Indicates whether all delete requests should be logged.
- `read` - (Required) Indicates whether all read requests should be logged.
- `retention_policy_days` - (Optional) Specifies the number of days that logs will be retained.
- `version` - (Required) The version of storage analytics to configure.
- `write` - (Required) Indicates whether all write requests should be logged.

---
`minute_metrics` block supports the following:
- `enabled` - (Required) Indicates whether minute metrics are enabled for the Queue service.
- `include_apis` - (Optional) Indicates whether metrics should generate summary statistics for called API operations.
- `retention_policy_days` - (Optional) Specifies the number of days that logs will be retained.
- `version` - (Required) The version of storage analytics to configure.


  */
  readonly queueProperties?: any;
  /**
  *  - `metadata` - (Optional) A mapping of MetaData which should be assigned to this Storage Queue.
 - `name` - (Required) The name of the Queue which should be created within the Storage Account. Must be unique within the storage account the queue is located. Changing this forces a new resource to be created.

Supply role assignments in the same way as for `var.role_assignments`.

 ---
 `timeouts` block supports the following:
 - `create` - (Defaults to 30 minutes) Used when creating the Storage Queue.
 - `delete` - (Defaults to 30 minutes) Used when deleting the Storage Queue.
 - `read` - (Defaults to 5 minutes) Used when retrieving the Storage Queue.
 - `update` - (Defaults to 30 minutes) Used when updating the Storage Queue.

  * [object Object]
  */
  readonly queues?: any;
  /**
  * The resource group where the resources will be deployed.
  */
  readonly resourceGroupName: string;
  /**
  * A map of role assignments to create on the resource. The map key is deliberately arbitrary to avoid issues where map keys maybe unknown at plan time.

- `role_definition_id_or_name` - The ID or name of the role definition to assign to the principal.
- `principal_id` - The ID of the principal to assign the role to.
- `description` - The description of the role assignment.
- `skip_service_principal_aad_check` - If set to true, skips the Azure Active Directory check for the service principal in the tenant. Defaults to false.
- `condition` - The condition which will be used to scope the role assignment.
- `condition_version` - The version of the condition syntax. Valid values are '2.0'.

> Note: only set `skip_service_principal_aad_check` to true if you are assigning a role to a service principal.

  * [object Object]
  */
  readonly roleAssignments?: any;
  /**
  * - `choice` - (Optional) Specifies the kind of network routing opted by the user. Possible values are `InternetRouting` and `MicrosoftRouting`. Defaults to `MicrosoftRouting`.
- `publish_internet_endpoints` - (Optional) Should internet routing storage endpoints be published? Defaults to `false`.
- `publish_microsoft_endpoints` - (Optional) Should Microsoft routing storage endpoints be published? Defaults to `false`.

  */
  readonly routing?: any;
  /**
  * - `expiration_action` - (Optional) The SAS expiration action. The only possible value is `Log` at this moment. Defaults to `Log`.
- `expiration_period` - (Required) The SAS expiration period in format of `DD.HH:MM:SS`.

  */
  readonly sasPolicy?: any;
  /**
  * (Optional) Boolean, enable SFTP for the storage account.  Defaults to `false`.
  */
  readonly sftpEnabled?: boolean;
  /**
  * 
---
`cors_rule` block supports the following:
- `allowed_headers` - (Required) A list of headers that are allowed to be a part of the cross-origin request.
- `allowed_methods` - (Required) A list of HTTP methods that are allowed to be executed by the origin. Valid options are `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS`, `PUT` or `PATCH`.
- `allowed_origins` - (Required) A list of origin domains that will be allowed by CORS.
- `exposed_headers` - (Required) A list of response headers that are exposed to CORS clients.
- `max_age_in_seconds` - (Required) The number of seconds the client should cache a preflight response.

---
`diagnostic_settings` block supports the following:
- `name` - (Optional) The name of the diagnostic setting. Defaults to `null`.
- `log_categories` - (Optional) A set of log categories to enable. Defaults to an empty set.
- `log_groups` - (Optional) A set of log groups to enable. Defaults to `["allLogs"]`.
- `metric_categories` - (Optional) A set of metric categories to enable. Defaults to `["AllMetrics"]`.
- `log_analytics_destination_type` - (Optional) The destination type for log analytics. Defaults to `"Dedicated"`.
- `workspace_resource_id` - (Optional) The resource ID of the Log Analytics workspace. Defaults to `null`.
- `resource_id` - (Optional) The resource ID of the target resource for diagnostics. Defaults to `null`.
- `event_hub_authorization_rule_resource_id` - (Optional) The resource ID of the Event Hub authorization rule. Defaults to `null`.
- `event_hub_name` - (Optional) The name of the Event Hub. Defaults to `null`.
- `marketplace_partner_resource_id` - (Optional) The resource ID of the marketplace partner. Defaults to `null`.

---
`retention_policy` block supports the following:
- `days` - (Optional) Specifies the number of days that the `azurerm_shares` should be retained, between `1` and `365` days. Defaults to `7`.

---
`smb` block supports the following:
- `authentication_types` - (Optional) A set of SMB authentication methods. Possible values are `NTLMv2`, and `Kerberos`.
- `channel_encryption_type` - (Optional) A set of SMB channel encryption. Possible values are `AES-128-CCM`, `AES-128-GCM`, and `AES-256-GCM`.
- `kerberos_ticket_encryption_type` - (Optional) A set of Kerberos ticket encryption. Possible values are `RC4-HMAC`, and `AES-256`.
- `multichannel_enabled` - (Optional) Indicates whether multichannel is enabled. Defaults to `false`. This is only supported on Premium storage accounts.
- `versions` - (Optional) A set of SMB protocol versions. Possible values are `SMB2.1`, `SMB3.0`, and `SMB3.1.1`.

  */
  readonly shareProperties?: any;
  /**
  * (Optional) Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is `false`.
  */
  readonly sharedAccessKeyEnabled?: boolean;
  /**
  *  - `access_tier` - (Optional) The access tier of the File Share. Possible values are `Hot`, `Cool` and `TransactionOptimized`, `Premium`.
 - `enabled_protocol` - (Optional) The protocol used for the share. Possible values are `SMB` and `NFS`. The `SMB` indicates the share can be accessed by SMBv3.0, SMBv2.1 and REST. The `NFS` indicates the share can be accessed by NFSv4.1. Defaults to `SMB`. Changing this forces a new resource to be created.
 - `metadata` - (Optional) A mapping of MetaData for this File Share.
 - `name` - (Required) The name of the share. Must be unique within the storage account where the share is located. Changing this forces a new resource to be created.
 - `quota` - (Required) The maximum size of the share, in gigabytes. For Standard storage accounts, this must be `1`GB (or higher) and at most `5120` GB (`5` TB). For Premium FileStorage storage accounts, this must be greater than 100 GB and at most `102400` GB (`100` TB).

 ---
 `acl` block supports the following:
 - `id` - (Required) The ID which should be used for this Shared Identifier.

 ---
 `access_policy` block supports the following:
 - `expiry` - (Optional) The time at which this Access Policy should be valid until, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 - `permissions` - (Required) The permissions which should be associated with this Shared Identifier. Possible value is combination of `r` (read), `w` (write), `d` (delete), and `l` (list).
 - `start` - (Optional) The time at which this Access Policy should be valid from, in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format.

 ---
 `timeouts` block supports the following:
 - `create` - (Defaults to 30 minutes) Used when creating the Storage Share.
 - `delete` - (Defaults to 30 minutes) Used when deleting the Storage Share.
 - `read` - (Defaults to 5 minutes) Used when retrieving the Storage Share.
 - `update` - (Defaults to 30 minutes) Used when updating the Storage Share.

Supply role assignments in the same way as for `var.role_assignments`.


  * [object Object]
  */
  readonly shares?: any;
  /**
  * - `error_404_document` - (Optional) The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
- `index_document` - (Optional) The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.

  */
  readonly staticWebsite?: any;
  /**
  * - `default_encryption_scope` - (Optional) The default encryption scope to use for this filesystem. Changing this forces a new resource to be created.
- `group` - (Optional) Specifies the Object ID of the Azure Active Directory Group to make the owning group of the root path (i.e. `/`). Possible values also include `$superuser`.
- `name` - (Required) The name of the Data Lake Gen2 File System which should be created within the Storage Account. Must be unique within the storage account the queue is located. Changing this forces a new resource to be created.
- `owner` - (Optional) Specifies the Object ID of the Azure Active Directory User to make the owning user of the root path (i.e. `/`). Possible values also include `$superuser`.
- `properties` - (Optional) A mapping of Key to Base64-Encoded Values which should be assigned to this Data Lake Gen2 File System.
---
`ace` block supports the following:
- `id` - (Optional) Specifies the Object ID of the Azure Active Directory User or Group that the entry relates to. Only valid for `user` or `group` entries.
- `permissions` - (Required) Specifies the permissions for the entry in `rwx` form. For example, `rwx` gives full permissions but `r--` only gives read permissions.
- `scope` - (Optional) Specifies whether the ACE represents an `access` entry or a `default` entry. Default value is `access`.
- `type` - (Required) Specifies the type of entry. Can be `user`, `group`, `mask` or `other`.

---
`timeouts` block supports the following:
- `create` - (Defaults to 30 minutes) Used when creating the Data Lake Gen2 File System.
- `delete` - (Defaults to 30 minutes) Used when deleting the Data Lake Gen2 File System.
- `read` - (Defaults to 5 minutes) Used when retrieving the Data Lake Gen2 File System.
- `update` - (Defaults to 30 minutes) Used when updating the Data Lake Gen2 File System.

  */
  readonly storageDataLakeGen2Filesystem?: any;
  /**
  * - `enabled` - (Required) Boolean to specify whether the rule is enabled.
- `name` - (Required) The name of the rule. Rule name is case-sensitive. It must be unique within a policy.

---
`actions` block supports the following:

---
`base_blob` block supports the following:
- `auto_tier_to_hot_from_cool_enabled` - (Optional) Whether a blob should automatically be tiered from cool back to hot if it's accessed again after being tiered to cool. Defaults to `false`.
- `delete_after_days_since_creation_greater_than` - (Optional) The age in days after creation to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
- `delete_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
- `delete_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to `-1`.
- `tier_to_archive_after_days_since_creation_greater_than` - (Optional) The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
- `tier_to_archive_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
- `tier_to_archive_after_days_since_last_tier_change_greater_than` - (Optional) The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.
- `tier_to_archive_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to `-1`.
- `tier_to_cold_after_days_since_creation_greater_than` - (Optional) The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
- `tier_to_cold_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
- `tier_to_cold_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
- `tier_to_cool_after_days_since_creation_greater_than` - (Optional) The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
- `tier_to_cool_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
- `tier_to_cool_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.

---
`snapshot` block supports the following:
- `change_tier_to_archive_after_days_since_creation` - (Optional) The age in days after creation to tier blob snapshot to archive storage. Must be between 0 and 99999. Defaults to `-1`.
- `change_tier_to_cool_after_days_since_creation` - (Optional) The age in days after creation to tier blob snapshot to cool storage. Must be between 0 and 99999. Defaults to `-1`.
- `delete_after_days_since_creation_greater_than` - (Optional) The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to `-1`.
- `tier_to_archive_after_days_since_last_tier_change_greater_than` - (Optional) The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.
- `tier_to_cold_after_days_since_creation_greater_than` - (Optional) The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.

---
`version` block supports the following:
- `change_tier_to_archive_after_days_since_creation` - (Optional) The age in days after creation to tier blob version to archive storage. Must be between 0 and 99999. Defaults to `-1`.
- `change_tier_to_cool_after_days_since_creation` - (Optional) The age in days creation create to tier blob version to cool storage. Must be between 0 and 99999. Defaults to `-1`.
- `delete_after_days_since_creation` - (Optional) The age in days after creation to delete the blob version. Must be between 0 and 99999. Defaults to `-1`.
- `tier_to_archive_after_days_since_last_tier_change_greater_than` - (Optional) The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.
- `tier_to_cold_after_days_since_creation_greater_than` - (Optional) The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.

---
`filters` block supports the following:
- `blob_types` - (Required) An array of predefined values. Valid options are `blockBlob` and `appendBlob`.
- `prefix_match` - (Optional) An array of strings for prefixes to be matched.

---
`match_blob_index_tag` block supports the following:
- `name` - (Required) The filter tag name used for tag based filtering for blob objects.
- `operation` - (Optional) The comparison operator which is used for object comparison and filtering. Possible value is `==`. Defaults to `==`.
- `value` - (Required) The filter tag value used for tag based filtering for blob objects.

  * [object Object]
  */
  readonly storageManagementPolicyRule?: any;
  /**
  * - `create` - (Defaults to 30 minutes) Used when creating the Storage Account Management Policy.
- `delete` - (Defaults to 30 minutes) Used when deleting the Storage Account Management Policy.
- `read` - (Defaults to 5 minutes) Used when retrieving the Storage Account Management Policy.
- `update` - (Defaults to 30 minutes) Used when updating the Storage Account Management Policy.

  */
  readonly storageManagementPolicyTimeouts?: any;
  /**
  * (Optional) The encryption type of the table service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
  */
  readonly tableEncryptionKeyType?: string;
  /**
  *  - `name` - (Required) The name of the storage table. Only Alphanumeric characters allowed, starting with a letter. Must be unique within the storage account the table is located. Changing this forces a new resource to be created.

 ---
 `acl` block supports the following:
 - `id` - (Required) The ID which should be used for this Shared Identifier.

 ---
 `access_policy` block supports the following:
 - `expiry` - (Required) The ISO8061 UTC time at which this Access Policy should be valid until.
 - `permissions` - (Required) The permissions which should associated with this Shared Identifier.
 - `start` - (Required) The ISO8061 UTC time at which this Access Policy should be valid from.

 ---
 `timeouts` block supports the following:
 - `create` - (Defaults to 30 minutes) Used when creating the Storage Table.
 - `delete` - (Defaults to 30 minutes) Used when deleting the Storage Table.
 - `read` - (Defaults to 5 minutes) Used when retrieving the Storage Table.
 - `update` - (Defaults to 30 minutes) Used when updating the Storage Table.

Supply role assignments in the same way as for `var.role_assignments`.


  * [object Object]
  */
  readonly tables?: any;
  /**
  * Custom tags to apply to the resource.
  * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
  */
  readonly tags?: { [key: string]: string };
  /**
  * - `create` - (Defaults to 60 minutes) Used when creating the Storage Account.
- `delete` - (Defaults to 60 minutes) Used when deleting the Storage Account.
- `read` - (Defaults to 5 minutes) Used when retrieving the Storage Account.
- `update` - (Defaults to 60 minutes) Used when updating the Storage Account.

  */
  readonly timeouts?: any;
}
/**
* Defines an Storage based on a Terraform module
*
* Docs at Terraform Registry: {@link https://registry.terraform.io/modules/Azure/avm-res-storage-storageaccount/azurerm/0.5.0 Azure/avm-res-storage-storageaccount/azurerm}
*/
export class Storage extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: StorageConfig) {
    super(scope, id, {
      ...config,
      source: 'Azure/avm-res-storage-storageaccount/azurerm',
      version: '0.5.0',
    });
    this.accessTier = config.accessTier;
    this.accountKind = config.accountKind;
    this.accountReplicationType = config.accountReplicationType;
    this.accountTier = config.accountTier;
    this.allowNestedItemsToBePublic = config.allowNestedItemsToBePublic;
    this.allowedCopyScope = config.allowedCopyScope;
    this.azureFilesAuthentication = config.azureFilesAuthentication;
    this.blobProperties = config.blobProperties;
    this.containers = config.containers;
    this.crossTenantReplicationEnabled = config.crossTenantReplicationEnabled;
    this.customDomain = config.customDomain;
    this.customerManagedKey = config.customerManagedKey;
    this.defaultToOauthAuthentication = config.defaultToOauthAuthentication;
    this.diagnosticSettingsBlob = config.diagnosticSettingsBlob;
    this.diagnosticSettingsFile = config.diagnosticSettingsFile;
    this.diagnosticSettingsQueue = config.diagnosticSettingsQueue;
    this.diagnosticSettingsStorageAccount = config.diagnosticSettingsStorageAccount;
    this.diagnosticSettingsTable = config.diagnosticSettingsTable;
    this.edgeZone = config.edgeZone;
    this.enableTelemetry = config.enableTelemetry;
    this.httpsTrafficOnlyEnabled = config.httpsTrafficOnlyEnabled;
    this.immutabilityPolicy = config.immutabilityPolicy;
    this.infrastructureEncryptionEnabled = config.infrastructureEncryptionEnabled;
    this.isHnsEnabled = config.isHnsEnabled;
    this.largeFileShareEnabled = config.largeFileShareEnabled;
    this.localUser = config.localUser;
    this.location = config.location;
    this.lock = config.lock;
    this.managedIdentities = config.managedIdentities;
    this.minTlsVersion = config.minTlsVersion;
    this.name = config.name;
    this.networkRules = config.networkRules;
    this.nfsv3Enabled = config.nfsv3Enabled;
    this.privateEndpoints = config.privateEndpoints;
    this.privateEndpointsManageDnsZoneGroup = config.privateEndpointsManageDnsZoneGroup;
    this.publicNetworkAccessEnabled = config.publicNetworkAccessEnabled;
    this.queueEncryptionKeyType = config.queueEncryptionKeyType;
    this.queueProperties = config.queueProperties;
    this.queues = config.queues;
    this.resourceGroupName = config.resourceGroupName;
    this.roleAssignments = config.roleAssignments;
    this.routing = config.routing;
    this.sasPolicy = config.sasPolicy;
    this.sftpEnabled = config.sftpEnabled;
    this.shareProperties = config.shareProperties;
    this.sharedAccessKeyEnabled = config.sharedAccessKeyEnabled;
    this.shares = config.shares;
    this.staticWebsite = config.staticWebsite;
    this.storageDataLakeGen2Filesystem = config.storageDataLakeGen2Filesystem;
    this.storageManagementPolicyRule = config.storageManagementPolicyRule;
    this.storageManagementPolicyTimeouts = config.storageManagementPolicyTimeouts;
    this.tableEncryptionKeyType = config.tableEncryptionKeyType;
    this.tables = config.tables;
    this.tags = config.tags;
    this.timeouts = config.timeouts;
  }
  public get accessTier(): string | undefined {
    return this.inputs['access_tier'] as string | undefined;
  }
  public set accessTier(value: string | undefined) {
    this.inputs['access_tier'] = value;
  }
  public get accountKind(): string | undefined {
    return this.inputs['account_kind'] as string | undefined;
  }
  public set accountKind(value: string | undefined) {
    this.inputs['account_kind'] = value;
  }
  public get accountReplicationType(): string | undefined {
    return this.inputs['account_replication_type'] as string | undefined;
  }
  public set accountReplicationType(value: string | undefined) {
    this.inputs['account_replication_type'] = value;
  }
  public get accountTier(): string | undefined {
    return this.inputs['account_tier'] as string | undefined;
  }
  public set accountTier(value: string | undefined) {
    this.inputs['account_tier'] = value;
  }
  public get allowNestedItemsToBePublic(): boolean | undefined {
    return this.inputs['allow_nested_items_to_be_public'] as boolean | undefined;
  }
  public set allowNestedItemsToBePublic(value: boolean | undefined) {
    this.inputs['allow_nested_items_to_be_public'] = value;
  }
  public get allowedCopyScope(): string | undefined {
    return this.inputs['allowed_copy_scope'] as string | undefined;
  }
  public set allowedCopyScope(value: string | undefined) {
    this.inputs['allowed_copy_scope'] = value;
  }
  public get azureFilesAuthentication(): any | undefined {
    return this.inputs['azure_files_authentication'] as any | undefined;
  }
  public set azureFilesAuthentication(value: any | undefined) {
    this.inputs['azure_files_authentication'] = value;
  }
  public get blobProperties(): any | undefined {
    return this.inputs['blob_properties'] as any | undefined;
  }
  public set blobProperties(value: any | undefined) {
    this.inputs['blob_properties'] = value;
  }
  public get containers(): any | undefined {
    return this.inputs['containers'] as any | undefined;
  }
  public set containers(value: any | undefined) {
    this.inputs['containers'] = value;
  }
  public get crossTenantReplicationEnabled(): boolean | undefined {
    return this.inputs['cross_tenant_replication_enabled'] as boolean | undefined;
  }
  public set crossTenantReplicationEnabled(value: boolean | undefined) {
    this.inputs['cross_tenant_replication_enabled'] = value;
  }
  public get customDomain(): any | undefined {
    return this.inputs['custom_domain'] as any | undefined;
  }
  public set customDomain(value: any | undefined) {
    this.inputs['custom_domain'] = value;
  }
  public get customerManagedKey(): any | undefined {
    return this.inputs['customer_managed_key'] as any | undefined;
  }
  public set customerManagedKey(value: any | undefined) {
    this.inputs['customer_managed_key'] = value;
  }
  public get defaultToOauthAuthentication(): boolean | undefined {
    return this.inputs['default_to_oauth_authentication'] as boolean | undefined;
  }
  public set defaultToOauthAuthentication(value: boolean | undefined) {
    this.inputs['default_to_oauth_authentication'] = value;
  }
  public get diagnosticSettingsBlob(): any | undefined {
    return this.inputs['diagnostic_settings_blob'] as any | undefined;
  }
  public set diagnosticSettingsBlob(value: any | undefined) {
    this.inputs['diagnostic_settings_blob'] = value;
  }
  public get diagnosticSettingsFile(): any | undefined {
    return this.inputs['diagnostic_settings_file'] as any | undefined;
  }
  public set diagnosticSettingsFile(value: any | undefined) {
    this.inputs['diagnostic_settings_file'] = value;
  }
  public get diagnosticSettingsQueue(): any | undefined {
    return this.inputs['diagnostic_settings_queue'] as any | undefined;
  }
  public set diagnosticSettingsQueue(value: any | undefined) {
    this.inputs['diagnostic_settings_queue'] = value;
  }
  public get diagnosticSettingsStorageAccount(): any | undefined {
    return this.inputs['diagnostic_settings_storage_account'] as any | undefined;
  }
  public set diagnosticSettingsStorageAccount(value: any | undefined) {
    this.inputs['diagnostic_settings_storage_account'] = value;
  }
  public get diagnosticSettingsTable(): any | undefined {
    return this.inputs['diagnostic_settings_table'] as any | undefined;
  }
  public set diagnosticSettingsTable(value: any | undefined) {
    this.inputs['diagnostic_settings_table'] = value;
  }
  public get edgeZone(): string | undefined {
    return this.inputs['edge_zone'] as string | undefined;
  }
  public set edgeZone(value: string | undefined) {
    this.inputs['edge_zone'] = value;
  }
  public get enableTelemetry(): boolean | undefined {
    return this.inputs['enable_telemetry'] as boolean | undefined;
  }
  public set enableTelemetry(value: boolean | undefined) {
    this.inputs['enable_telemetry'] = value;
  }
  public get httpsTrafficOnlyEnabled(): boolean | undefined {
    return this.inputs['https_traffic_only_enabled'] as boolean | undefined;
  }
  public set httpsTrafficOnlyEnabled(value: boolean | undefined) {
    this.inputs['https_traffic_only_enabled'] = value;
  }
  public get immutabilityPolicy(): any | undefined {
    return this.inputs['immutability_policy'] as any | undefined;
  }
  public set immutabilityPolicy(value: any | undefined) {
    this.inputs['immutability_policy'] = value;
  }
  public get infrastructureEncryptionEnabled(): boolean | undefined {
    return this.inputs['infrastructure_encryption_enabled'] as boolean | undefined;
  }
  public set infrastructureEncryptionEnabled(value: boolean | undefined) {
    this.inputs['infrastructure_encryption_enabled'] = value;
  }
  public get isHnsEnabled(): boolean | undefined {
    return this.inputs['is_hns_enabled'] as boolean | undefined;
  }
  public set isHnsEnabled(value: boolean | undefined) {
    this.inputs['is_hns_enabled'] = value;
  }
  public get largeFileShareEnabled(): boolean | undefined {
    return this.inputs['large_file_share_enabled'] as boolean | undefined;
  }
  public set largeFileShareEnabled(value: boolean | undefined) {
    this.inputs['large_file_share_enabled'] = value;
  }
  public get localUser(): any | undefined {
    return this.inputs['local_user'] as any | undefined;
  }
  public set localUser(value: any | undefined) {
    this.inputs['local_user'] = value;
  }
  public get location(): string {
    return this.inputs['location'] as string;
  }
  public set location(value: string) {
    this.inputs['location'] = value;
  }
  public get lock(): any | undefined {
    return this.inputs['lock'] as any | undefined;
  }
  public set lock(value: any | undefined) {
    this.inputs['lock'] = value;
  }
  public get managedIdentities(): any | undefined {
    return this.inputs['managed_identities'] as any | undefined;
  }
  public set managedIdentities(value: any | undefined) {
    this.inputs['managed_identities'] = value;
  }
  public get minTlsVersion(): string | undefined {
    return this.inputs['min_tls_version'] as string | undefined;
  }
  public set minTlsVersion(value: string | undefined) {
    this.inputs['min_tls_version'] = value;
  }
  public get name(): string {
    return this.inputs['name'] as string;
  }
  public set name(value: string) {
    this.inputs['name'] = value;
  }
  public get networkRules(): any | undefined {
    return this.inputs['network_rules'] as any | undefined;
  }
  public set networkRules(value: any | undefined) {
    this.inputs['network_rules'] = value;
  }
  public get nfsv3Enabled(): boolean | undefined {
    return this.inputs['nfsv3_enabled'] as boolean | undefined;
  }
  public set nfsv3Enabled(value: boolean | undefined) {
    this.inputs['nfsv3_enabled'] = value;
  }
  public get privateEndpoints(): any | undefined {
    return this.inputs['private_endpoints'] as any | undefined;
  }
  public set privateEndpoints(value: any | undefined) {
    this.inputs['private_endpoints'] = value;
  }
  public get privateEndpointsManageDnsZoneGroup(): boolean | undefined {
    return this.inputs['private_endpoints_manage_dns_zone_group'] as boolean | undefined;
  }
  public set privateEndpointsManageDnsZoneGroup(value: boolean | undefined) {
    this.inputs['private_endpoints_manage_dns_zone_group'] = value;
  }
  public get publicNetworkAccessEnabled(): boolean | undefined {
    return this.inputs['public_network_access_enabled'] as boolean | undefined;
  }
  public set publicNetworkAccessEnabled(value: boolean | undefined) {
    this.inputs['public_network_access_enabled'] = value;
  }
  public get queueEncryptionKeyType(): string | undefined {
    return this.inputs['queue_encryption_key_type'] as string | undefined;
  }
  public set queueEncryptionKeyType(value: string | undefined) {
    this.inputs['queue_encryption_key_type'] = value;
  }
  public get queueProperties(): any | undefined {
    return this.inputs['queue_properties'] as any | undefined;
  }
  public set queueProperties(value: any | undefined) {
    this.inputs['queue_properties'] = value;
  }
  public get queues(): any | undefined {
    return this.inputs['queues'] as any | undefined;
  }
  public set queues(value: any | undefined) {
    this.inputs['queues'] = value;
  }
  public get resourceGroupName(): string {
    return this.inputs['resource_group_name'] as string;
  }
  public set resourceGroupName(value: string) {
    this.inputs['resource_group_name'] = value;
  }
  public get roleAssignments(): any | undefined {
    return this.inputs['role_assignments'] as any | undefined;
  }
  public set roleAssignments(value: any | undefined) {
    this.inputs['role_assignments'] = value;
  }
  public get routing(): any | undefined {
    return this.inputs['routing'] as any | undefined;
  }
  public set routing(value: any | undefined) {
    this.inputs['routing'] = value;
  }
  public get sasPolicy(): any | undefined {
    return this.inputs['sas_policy'] as any | undefined;
  }
  public set sasPolicy(value: any | undefined) {
    this.inputs['sas_policy'] = value;
  }
  public get sftpEnabled(): boolean | undefined {
    return this.inputs['sftp_enabled'] as boolean | undefined;
  }
  public set sftpEnabled(value: boolean | undefined) {
    this.inputs['sftp_enabled'] = value;
  }
  public get shareProperties(): any | undefined {
    return this.inputs['share_properties'] as any | undefined;
  }
  public set shareProperties(value: any | undefined) {
    this.inputs['share_properties'] = value;
  }
  public get sharedAccessKeyEnabled(): boolean | undefined {
    return this.inputs['shared_access_key_enabled'] as boolean | undefined;
  }
  public set sharedAccessKeyEnabled(value: boolean | undefined) {
    this.inputs['shared_access_key_enabled'] = value;
  }
  public get shares(): any | undefined {
    return this.inputs['shares'] as any | undefined;
  }
  public set shares(value: any | undefined) {
    this.inputs['shares'] = value;
  }
  public get staticWebsite(): any | undefined {
    return this.inputs['static_website'] as any | undefined;
  }
  public set staticWebsite(value: any | undefined) {
    this.inputs['static_website'] = value;
  }
  public get storageDataLakeGen2Filesystem(): any | undefined {
    return this.inputs['storage_data_lake_gen2_filesystem'] as any | undefined;
  }
  public set storageDataLakeGen2Filesystem(value: any | undefined) {
    this.inputs['storage_data_lake_gen2_filesystem'] = value;
  }
  public get storageManagementPolicyRule(): any | undefined {
    return this.inputs['storage_management_policy_rule'] as any | undefined;
  }
  public set storageManagementPolicyRule(value: any | undefined) {
    this.inputs['storage_management_policy_rule'] = value;
  }
  public get storageManagementPolicyTimeouts(): any | undefined {
    return this.inputs['storage_management_policy_timeouts'] as any | undefined;
  }
  public set storageManagementPolicyTimeouts(value: any | undefined) {
    this.inputs['storage_management_policy_timeouts'] = value;
  }
  public get tableEncryptionKeyType(): string | undefined {
    return this.inputs['table_encryption_key_type'] as string | undefined;
  }
  public set tableEncryptionKeyType(value: string | undefined) {
    this.inputs['table_encryption_key_type'] = value;
  }
  public get tables(): any | undefined {
    return this.inputs['tables'] as any | undefined;
  }
  public set tables(value: any | undefined) {
    this.inputs['tables'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get timeouts(): any | undefined {
    return this.inputs['timeouts'] as any | undefined;
  }
  public set timeouts(value: any | undefined) {
    this.inputs['timeouts'] = value;
  }
  public get containersOutput() {
    return this.getString('containers')
  }
  public get fqdnOutput() {
    return this.getString('fqdn')
  }
  public get nameOutput() {
    return this.getString('name')
  }
  public get privateEndpointsOutput() {
    return this.getString('private_endpoints')
  }
  public get queuesOutput() {
    return this.getString('queues')
  }
  public get resourceOutput() {
    return this.getString('resource')
  }
  public get resourceIdOutput() {
    return this.getString('resource_id')
  }
  public get sharesOutput() {
    return this.getString('shares')
  }
  public get tablesOutput() {
    return this.getString('tables')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
